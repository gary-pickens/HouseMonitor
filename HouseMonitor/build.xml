<?xml version="1.0" encoding="UTF-8"?>
<project name="Home Monitor Program" default="clean">
    <property name="version" value="4.0.4" />
    <property name="project" value="HouseMonitor" />
    <property name="remote_directory" value="${project}.${version}" />
    <property name="host" value="192.168.7.2" />
	<property name="author" value="Gary Pickens" />
    <property name="email" value="gary_pickens@yahoo.com" />
	<property name="title" value="House Monitor and Control"/>
	<property name="current.dir" value="${basedir}" />
	<tstamp>
      <format property="now" pattern="yyyy-MM-dd HH:mm:ss"/>
    </tstamp>


	<import file="${user.home}/imported.xml" />
<!-- The following two entries need to be added to import.xml with the correct user and password
	<property name="user" value="" />
    <property name="password" value="" />
-->
	<property name="dir" value="${dir}" />
	<property name="HMHOME" value="~gary/bin/HouseMonitor" />
    <property name="XbeeConfig" value="bin/XbeeConfig" />
	
    <target name="egg" description="Create egg" depends='UnitTest, fix'>
        <exec executable="python" failonerror="true">
            <arg line="setup.py sdist" />
        </exec> 
    </target>

	<target name="egg-test" description="Test egg in ">
        <delete dir='pip_test_env/build'/>
        <exec executable="virtualenv">
            <arg line="--no-site-packages pip_test_env" />
        </exec> 
        <exec executable="virtualenv">
            <arg line="--no-site-packages pip_test_env" />
        </exec> 
        <exec executable="pip_test_env\Scripts\activate.bat"/>
        <exec executable="pip_test_env\Scripts\pip.exe">
                <arg line=" install dist\HouseMonitor-${version}.zip" />
        </exec>
    </target>

	<target name="UpdateConfig" description="Update Configuration Files">

        <loadfile property="housemonitorinfo.py" srcfile="housemonitor/housemonitorinfo.py.template">
             <filterchain>
              <replacetokens>
                <token key="VERSION" value="${version}"/>
                <token key="AUTHOR" value="${author}"/>
                <token key="EMAIL" value="${email}"/>
                <token key="DATE" value="${now}"/>
                <token key="TITLE" value="${title}"/>
                <token key="PROJECT" value="${project}"/>
              </replacetokens>
             </filterchain>
        </loadfile>
        <echo file="housemonitor/housemonitorinfo.py">${housemonitorinfo.py}</echo>
    	
    	<loadfile property="housemonitor.service.template" srcfile="housemonitor/housemonitor.service.template">
            <filterchain>
             <replacetokens>
                <token key="VERSION" value="${version}"/>
                <token key="AUTHOR" value="${author}"/>
                <token key="EMAIL" value="${email}"/>
                <token key="DATE" value="${now}"/>
                <token key="TITLE" value="${title}"/>
                <token key="PROJECT" value="${project}"/>
             </replacetokens>
            </filterchain>
    	</loadfile>
    	<echo file="housemonitor/housemonitor.service">${housemonitor.service.template}</echo>

    	<loadfile property="setup.py.template" srcfile="setup.py.template">
    		   <filterchain>
    		    <replacetokens>
    		    	<token key="VERSION" value="${version}"/>
                    <token key="AUTHOR" value="${author}"/>
                    <token key="EMAIL" value="${email}"/>
                    <token key="DATE" value="${now}"/>
                    <token key="TITLE" value="${title}"/>
                    <token key="PROJECT" value="${project}"/>
    		    </replacetokens>
    		   </filterchain>
    	</loadfile>
        <echo file="setup.py">${setup.py.template}</echo>
    </target>

	<target name="UnitTest" depends="clean, UpdateConfig" description="Run all UnitTests">
        <exec executable="nosetests" failonerror="true" >
            <arg value="--ignore-files=abc_step_test.py"/>
        </exec>
    </target>

	<target name="coverage" depends="clean, UpdateConfig" description="Run all UnitTests with Coverage">

		<exec executable="coverage" failonerror="true" >
            <arg value="erase"/>
        </exec>

		<exec executable="nosetests" failonerror="true" >
            <arg value="--ignore-files=abc_step_test.py"/>
        	<arg value="--ignore-files=cursesmonitorcurrentvalues.py"/>
            <arg value="--with-coverage"/>
            <arg value="--cover-package='housemonitor'"/>
            <arg value="--cover-html"/>
            <arg value="--cover-branches"/>
            <arg value="--cover-inclusive"/>
            <arg value="housemonitor"/>
        </exec>

		<exec executable="coverage" failonerror="true" >
            <arg value="html"/>
        	<arg value="-d cover"/>
        </exec>

		<exec executable="coverage" failonerror="true" >
            <arg value="xml"/>
        </exec>

	</target>

	<target name="clean" description="remove intermediate files">
        <delete>
            <fileset dir="C:\Users\Gary\git\HouseMonitor\HouseMonitor">
                <include name="**/*.pyc" />
                <include name="**/*.pyo" />
                <include name="**/*.log" />
                <include name=".coverage"/>
                <include name="cover/*.html"/>
                <include name="**/*pychache*"/>
                <include name=".coverage"/>
                <include name="cover"/>
                <include name="setup.py"/>
                <include name="housemonitor/housemonitor.service"/>
                <include name="housemonitor/housemonitorinfo.py"/>
            </fileset>
        </delete>
    </target>

	<target name="cleanbeaglebone" description="remove the files in ${remote_directory">

		<sshexec host="${host}" username="${user}" password="${password}"
            command="rm -rf src/${remote_directory}" />

		<sshexec host="${host}" username="${user}" password="${password}"
            command="sudo rm -rf ${HMHOME};mkdir ${HMHOME}" />

	</target>

	<target name="archivebeaglebone"
        description="create archive of files on the beaglebone computer">
        <tstamp />
        <sshexec host="${host}" username="${user}" password="${password}"
            command="tar czf backup/${project}.${version}-${DSTAMP}${TSTAMP}.tar.gz src/${remote_directory}" />
    </target>

	<target name="copytobeaglebone" description="copy the files to the beaglebone computer" depends="egg">
        <scp todir="${user}:${password}@${host}:~gary/src" failonerror="true" trust="true">
            <fileset dir="dist">
            	<include name="${project}-${version}.zip"/>
            </fileset>
        </scp>
    </target>
    <target name="installbeaglebone" description="copy the files to the beaglebone computer" depends="copytobeaglebone">
        <sshexec host="${host}" username="${user}" password="${password}"  trust="true"
            command="rm -rf /usr/lib/python2.7/site-packages//${project}-${version}" />
        <sshexec host="${host}" username="${user}" password="${password}" trust="true"
            command="rm -rf ~gary/src/${project}-${version}" />
        <sshexec host="${host}" username="${user}" password="${password}" failonerror="true" trust="true"
            command="cd ~gary/src/;unzip ${project}-${version}.zip" />
        <sshexec host="${host}" username="${user}" password="${password}" trust="true"
            command="easy_install -Z ~gary/src/${project}-${version}.zip" />
        <sshexec host="${host}" username="${user}" password="${password}" trust="true"
            command="cp ~gary/src/${project}-${version}/housemonitor/config/cacerts.txt /usr/lib/python2.7/site-packages/httplib2-0.8-py2.7.egg/httplib2" />
<!--
        <sshexec host="${host}" username="${user}" password="${password}" trust="true"
            command="cp ~gary/src/HouseMonitor-${version}/housemonitor/housemonitor.service /etc/systemd/system/housemonitor.service" />
        <sshexec host="${host}" username="${user}" password="${password}" trust="true"
            command="systemctl daemon-reload" />
        <sshexec host="${host}" username="${user}" password="${password}" trust="true"
            command="systemctl restart housemonitor.service" />     
        <sshexec host="${host}" username="${user}" password="${password}" trust="true"
            command="systemctl enable housemonitor.service" />     
-->            
    </target>
    <target name="copydoctobeaglebone" description="copy the doc files to the beaglebone computer">
        <scp todir="${user}:${password}@${host}:/www/pages" failonerror="true" trust="true">
            <fileset dir="C:\Users\Gary\git\HouseMonitor\HouseMonitor\docs\_build\html">
            </fileset>
        </scp>
        <scp todir="${user}:${password}@${host}:/www/pages/cover" failonerror="true" trust="true">
            <fileset dir="C:\Users\Gary\git\HouseMonitor\HouseMonitor\cover">
            </fileset>
        </scp>
    </target>
    <target name="release" description="copy the files to the beaglebone computer">
        <scp todir="${user}:${password}@${host}:bin/HouseMonitor.release" failonerror="true">
            <fileset file=".">
                <include name="**/*.py" />
                <include name="**/*.conf" />
                <include name="**/*.xml" />
                <exclude name="UnitTest" />
            </fileset>
        </scp>
    </target>
	<!-- Documentation Section -->
    <target name="doc" description="build documentation" depends="doc-create">
        <exec executable="cmd.exe" dir="docs" failonerror="true">
            <arg line="/c make.bat html" />
        </exec>
    </target>
    <target name="doc-create" description="build documentation" depends="doc-clean">
        <exec executable="sphinx-apidoc"> 
			<arg value="-H ${project}"/>
        	<arg value="-A ${author}"/>
        	<arg value="-V ${version}"/>
        	<arg value="-o"/>
            <arg value="docs"/> 
            <arg value="${basedir}/housemonitor"/> 
        </exec>
    </target>
    <target name="doc-clean" description="remove intermediate files">
        <delete>
            <fileset dir="C:\Users\Gary\git\HouseMonitor\HouseMonitor">
                <include name="docs/HouseMonitor*.rst" />
                <include name="docs/housemonitor*.rst" />
                <include name="docs\_build" />
            </fileset>
        </delete>
    	<delete dir="docs\_build"/>
    </target>
	
    <target name="test" description="Run House Monitor in Test Mode">
        <exec executable="python">
            <arg value="HouseMonitor.py"/>
            <arg value="--test"/>
        </exec>
    </target>
    <target name="HouseMonitor" description="Run House Monitor">
        <exec executable="python">
            <arg value="HouseMonitor.py"/>
        </exec>
    </target>
    <target name="Build Sunroom XBee" description="build documentation">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="5.0"/>
            <arg value="--AT"/>         
            <arg value="--sunroom"/>
        </exec>
    </target>
    <target name="Build Kitchen XBee" description="Build Kitchen XBee">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="2.0"/>
            <arg value="--AT"/>         
            <arg value="--Kitchen"/>
        </exec>
    </target>
    <target name="Build Outdoor XBee" description="Build outdoor XBee">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="2.0"/>
            <arg value="--AT"/>         
            <arg value="--Outdoor"/>
        </exec>
    </target>
    <target name="Build Coordinator XBee" description="build documentation">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="7.0"/>
            <arg value="--AT"/>            
            <arg value="--coordinator"/>
        </exec>
    </target>
    <target name="Build Garage Door XBee" description="build documentation">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="5.0"/>
            <arg value="--AT"/>            
            <arg value="--garage"/>
        </exec>
    </target>
    <target name="Build Status Panel XBee" description="build the status panel xbee">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="5.0"/>
            <arg value="--AT"/>            
            <arg value="--status"/>
        </exec>
    </target>
    <target name="ToAT" description="build documentation">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="5.0"/>
            <arg value="--zigbee"/>            
            <arg value="--ToAT"/>
        </exec>
    </target>
    <target name="ToAPI" description="build documentation">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="5.0"/>
            <arg value="--AT"/>            
            <arg value="--ToAPI"/>
        </exec>
    </target>
    <target name="Disable Encryption" description="build documentation">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="5.0"/>
            <arg value="--AT"/>            
            <arg value="--DisableEncrption"/>
        </exec>
    </target>
    <target name="Enable Encryption" description="build documentation">
        <exec executable="python"> 
            <arg value="${XbeeConfig}"/>
            <arg value="--port"/>
            <arg value="COM4"/>
            <arg value="--speed"/>
            <arg value="9600"/>
            <arg value="--timeout"/>
            <arg value="5.0"/>
            <arg value="--AT"/>            
            <arg value="--EnableEncrption"/>
        </exec>
    </target>
    <target name="clone digger" description="Look for clones">
        <exec executable="/Python27/Scripts/clonedigger.exe">
        	<arg value="--ignore-dir=test"/>
            <arg value="housemonitor"/>
        </exec>
    </target>
    <target name="qt" description="Build qt monitor">
        <exec dir="housemonitor/qt" executable="pyside-uic.exe">
            <arg value="HouseMonitor3.ui"/>
            <arg value="-o"/>
            <arg value="monitor.py"/>
        </exec>
    </target>
	<target name="fix" description="Fix LF and CR">
		<fixcrlf srcdir="bin" eol="unix" fixlast="True" />
        <fixcrlf srcdir="housemonitor" includes="**/*.py"  eol="unix" fixlast="True" />
	</target>
</project>
